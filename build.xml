<?xml version="1.0" encoding="UTF-8"?>
<project name="Jason Michels Bubble Popping Game" basedir="." default="test">

    <if>
        <available file="build.properties"/>
        <then>
            <property file="build.properties"/>
        </then>
        <else>
            <echo msg="No build.properties file detected... OK. Skipping" level="verbose" />
        </else>
    </if>

    <property name="dir.base" value="${project.basedir}" />
    <property name="dir.src" value="${project.basedir}/src"/>
    <property name="dir.build" value="${project.basedir}/build"/>
    <property name="dir.reports.phpmetric" value="${dir.build}/phpmetrics"/>
    <property name="dir.vendor" value="${project.basedir}/vendor" />
    <property name="bin.composer.failMessage" value="Could not find composer. Please make a composer.phar executable available either in path or project root. See: http://getcomposer.org/download/ for details."/>


    <!--******************************************************************************************-->
    <!--
       Check Target
       Runs all quality check sub-targets
   -->
    <target name="check" description="Runs all quality check sub-targets" >
        <phingcall target="check:phpmetrics" />
    </target>

    <!-- Run all tests -->
    <target name="test" description="Run unit tests">
        <exec passthru="true" checkreturn="true" command="php phpunit.phar"/>
    </target>

    <!--******************************************************************************************-->

    <!-- Run all tests with code coverage -->
    <target name="test:coverage">
        <exec passthru="true" checkreturn="true" command="php phpunit.phar --coverage-html ./tests/coverage"/>
    </target>

    <!-- Composer install -->
    <target name="composer:install" depends="detect-composerbin">
        <exec passthru="true" checkreturn="true" command="${bin.composer} install --verbose --no-interaction"/>
    </target>

    <!--Composer Update-->
    <target name="composer:update" depends="detect-composerbin">
        <exec passthru="true" checkreturn="true" command="${bin.composer} update --verbose --no-interaction"/>
    </target>

    <!-- PHP Metrics -->
    <target name="check:phpmetrics" >
        <exec passthru="true" checkreturn="false" command="vendor/bin/phpmetrics --report-html=${dir.reports.phpmetric}/choice.html ${dir.src}" />
    </target>

    <!-- Internal target to get the correct composer bin file to use
         First try composer.phar in the project directory
         Then try 'composer.phar' or 'composer' in the path, using `which`
         -->
    <target name="detect-composerbin" hidden="true">
        <if>
            <available file="${bin.composer}"/>
            <else>
                <exec command="which composer.phar" outputProperty="bin.composer"/>
                <if>
                    <equals arg1="${bin.composer}" arg2=""/>
                    <then>
                        <exec command="which composer" outputProperty="bin.composer"/>
                        <if>
                            <equals arg1="${bin.composer}" arg2=""/>
                            <then>
                                <fail message="${bin.composer.failMessage}"/>
                            </then>
                        </if>
                    </then>
                </if>
            </else>
        </if>
        <echo msg="Using composer at '${bin.composer}'"/>
    </target>

</project>